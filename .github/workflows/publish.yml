name: Publish to crates.io

on:
  # Trigger on new tags that match version pattern
  push:
    tags:
      - 'v*'
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish even if production checks fail'
        required: false
        default: false
        type: boolean

env:
  CARGO_TERM_COLOR: always

jobs:
  production-validation:
    name: Pre-publish Validation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Strict validation
      run: |
        echo "Running production validation..."
        cargo fmt -- --check
        cargo clippy --lib --all-features -- -D warnings
        cargo check --lib --all-features
        cargo test --lib --all-features
        cargo doc --lib --no-deps --all-features
        echo "âœ… All production checks passed!"

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: production-validation
    if: success() || github.event.inputs.force_publish == 'true'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Final package verification
      run: cargo package --list
      
    - name: Dry run publish
      run: cargo publish --dry-run
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        
    - name: Publish to crates.io
      run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        
    - name: Create GitHub release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: |
          target/package/tapsilat-*.crate
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
